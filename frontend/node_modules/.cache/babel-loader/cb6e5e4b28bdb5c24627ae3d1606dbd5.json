{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar errCode = require('err-code');\nvar browserStreamToIt = require('browser-readablestream-to-it');\nvar itPeekable = require('it-peekable');\nvar map = require('it-map');\nvar utils = require('./utils.js');\nvar ipfsUnixfs = require('ipfs-unixfs');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar browserStreamToIt__default = /*#__PURE__*/_interopDefaultLegacy(browserStreamToIt);\nvar itPeekable__default = /*#__PURE__*/_interopDefaultLegacy(itPeekable);\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\nasync function* normaliseCandidateMultiple(input, normaliseContent) {\n  if (typeof input === 'string' || input instanceof String || utils.isBytes(input) || utils.isBlob(input) || input._readableState) {\n    throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (utils.isReadableStream(input)) {\n    input = browserStreamToIt__default[\"default\"](input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable__default[\"default\"](input);\n    const {\n      value,\n      done\n    } = await peekable.peek();\n    if (done) {\n      yield* [];\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n    }\n    if (value._readableState) {\n      yield* map__default[\"default\"](peekable, value => toFileObject({\n        content: value\n      }, normaliseContent));\n      return;\n    }\n    if (utils.isBytes(value)) {\n      yield toFileObject({\n        content: peekable\n      }, normaliseContent);\n      return;\n    }\n    if (utils.isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || utils.isReadableStream(value) || utils.isBlob(value)) {\n      yield* map__default[\"default\"](peekable, value => toFileObject(value, normaliseContent));\n      return;\n    }\n  }\n  if (utils.isFileObject(input)) {\n    throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {\n    path,\n    mode,\n    mtime,\n    content\n  } = input;\n  const file = {\n    path: path || '',\n    mode: ipfsUnixfs.parseMode(mode),\n    mtime: ipfsUnixfs.parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}\nexports.normaliseCandidateMultiple = normaliseCandidateMultiple;","map":{"version":3,"names":["Object","defineProperty","exports","value","errCode","require","browserStreamToIt","itPeekable","map","utils","ipfsUnixfs","_interopDefaultLegacy","e","errCode__default","browserStreamToIt__default","itPeekable__default","map__default","normaliseCandidateMultiple","input","normaliseContent","String","isBytes","isBlob","_readableState","Error","isReadableStream","Symbol","iterator","asyncIterator","peekable","done","peek","push","Number","isInteger","toFileObject","content","isFileObject","path","mode","mtime","file","parseMode","parseMtime"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-core-utils/cjs/src/files/normalise-candidate-multiple.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errCode = require('err-code');\nvar browserStreamToIt = require('browser-readablestream-to-it');\nvar itPeekable = require('it-peekable');\nvar map = require('it-map');\nvar utils = require('./utils.js');\nvar ipfsUnixfs = require('ipfs-unixfs');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar browserStreamToIt__default = /*#__PURE__*/_interopDefaultLegacy(browserStreamToIt);\nvar itPeekable__default = /*#__PURE__*/_interopDefaultLegacy(itPeekable);\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\n\nasync function* normaliseCandidateMultiple(input, normaliseContent) {\n  if (typeof input === 'string' || input instanceof String || utils.isBytes(input) || utils.isBlob(input) || input._readableState) {\n    throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (utils.isReadableStream(input)) {\n    input = browserStreamToIt__default[\"default\"](input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable__default[\"default\"](input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield* [];\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n    }\n    if (value._readableState) {\n      yield* map__default[\"default\"](peekable, value => toFileObject({ content: value }, normaliseContent));\n      return;\n    }\n    if (utils.isBytes(value)) {\n      yield toFileObject({ content: peekable }, normaliseContent);\n      return;\n    }\n    if (utils.isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || utils.isReadableStream(value) || utils.isBlob(value)) {\n      yield* map__default[\"default\"](peekable, value => toFileObject(value, normaliseContent));\n      return;\n    }\n  }\n  if (utils.isFileObject(input)) {\n    throw errCode__default[\"default\"](new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: ipfsUnixfs.parseMode(mode),\n    mtime: ipfsUnixfs.parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}\n\nexports.normaliseCandidateMultiple = normaliseCandidateMultiple;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}