{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar errCode = require('err-code');\nvar cid = require('multiformats/cid');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nasync function* normaliseInput(input) {\n  if (input === null || input === undefined) {\n    throw errCode__default[\"default\"](new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT');\n  }\n  const cid$1 = cid.CID.asCID(input);\n  if (cid$1) {\n    yield toPin({\n      cid: cid$1\n    });\n    return;\n  }\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({\n      path: input\n    });\n    return;\n  }\n  if (input.cid != null || input.path != null) {\n    return yield toPin(input);\n  }\n  if (Symbol.iterator in input) {\n    const iterator = input[Symbol.iterator]();\n    const first = iterator.next();\n    if (first.done) return iterator;\n    if (cid.CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({\n        cid: first.value\n      });\n      for (const cid of iterator) {\n        yield toPin({\n          cid\n        });\n      }\n      return;\n    }\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n      for (const obj of iterator) {\n        yield toPin(obj);\n      }\n      return;\n    }\n    throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (Symbol.asyncIterator in input) {\n    const iterator = input[Symbol.asyncIterator]();\n    const first = await iterator.next();\n    if (first.done) return iterator;\n    if (cid.CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({\n        cid: first.value\n      });\n      for await (const cid of iterator) {\n        yield toPin({\n          cid\n        });\n      }\n      return;\n    }\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n      for await (const obj of iterator) {\n        yield toPin(obj);\n      }\n      return;\n    }\n    throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toPin(input) {\n  const path = input.cid || `${input.path}`;\n  if (!path) {\n    throw errCode__default[\"default\"](new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT');\n  }\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  };\n  if (input.metadata != null) {\n    pin.metadata = input.metadata;\n  }\n  return pin;\n}\nexports.normaliseInput = normaliseInput;","map":{"version":3,"names":["Object","defineProperty","exports","value","errCode","require","cid","_interopDefaultLegacy","e","errCode__default","normaliseInput","input","undefined","Error","cid$1","CID","asCID","toPin","String","path","Symbol","iterator","first","next","done","obj","asyncIterator","pin","recursive","metadata"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-core-utils/cjs/src/pins/normalise-input.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errCode = require('err-code');\nvar cid = require('multiformats/cid');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nasync function* normaliseInput(input) {\n  if (input === null || input === undefined) {\n    throw errCode__default[\"default\"](new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n  }\n  const cid$1 = cid.CID.asCID(input);\n  if (cid$1) {\n    yield toPin({ cid: cid$1 });\n    return;\n  }\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input });\n    return;\n  }\n  if (input.cid != null || input.path != null) {\n    return yield toPin(input);\n  }\n  if (Symbol.iterator in input) {\n    const iterator = input[Symbol.iterator]();\n    const first = iterator.next();\n    if (first.done)\n      return iterator;\n    if (cid.CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value });\n      for (const cid of iterator) {\n        yield toPin({ cid });\n      }\n      return;\n    }\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n      for (const obj of iterator) {\n        yield toPin(obj);\n      }\n      return;\n    }\n    throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (Symbol.asyncIterator in input) {\n    const iterator = input[Symbol.asyncIterator]();\n    const first = await iterator.next();\n    if (first.done)\n      return iterator;\n    if (cid.CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value });\n      for await (const cid of iterator) {\n        yield toPin({ cid });\n      }\n      return;\n    }\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n      for await (const obj of iterator) {\n        yield toPin(obj);\n      }\n      return;\n    }\n    throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode__default[\"default\"](new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toPin(input) {\n  const path = input.cid || `${ input.path }`;\n  if (!path) {\n    throw errCode__default[\"default\"](new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT');\n  }\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  };\n  if (input.metadata != null) {\n    pin.metadata = input.metadata;\n  }\n  return pin;\n}\n\nexports.normaliseInput = normaliseInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}