{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar token = require('./token.js');\nvar _0uint = require('./0uint.js');\nvar common = require('./common.js');\nfunction decodeNegint8(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint8(data, pos + 1, options), 2);\n}\nfunction decodeNegint16(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint16(data, pos + 1, options), 3);\n}\nfunction decodeNegint32(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nfunction decodeNegint64(data, pos, _minor, options) {\n  const int = _0uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new token.Token(token.Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${common.decodeErrPrefix} integers outside of the safe integer range are not supported`);\n  }\n  return new token.Token(token.Type.negint, neg1b - BigInt(int), 9);\n}\nfunction encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  _0uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < _0uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < _0uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < _0uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < _0uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};\nexports.decodeNegint16 = decodeNegint16;\nexports.decodeNegint32 = decodeNegint32;\nexports.decodeNegint64 = decodeNegint64;\nexports.decodeNegint8 = decodeNegint8;\nexports.encodeNegint = encodeNegint;","map":{"version":3,"names":["Object","defineProperty","exports","value","token","require","_0uint","common","decodeNegint8","data","pos","_minor","options","Token","Type","negint","readUint8","decodeNegint16","readUint16","decodeNegint32","readUint32","neg1b","BigInt","pos1b","decodeNegint64","int","readUint64","Number","MIN_SAFE_INTEGER","allowBigInt","Error","decodeErrPrefix","encodeNegint","buf","unsigned","encodeUintValue","type","majorEncoded","encodedSize","uintBoundaries","compareTokens","tok1","tok2"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/cborg/cjs/lib/1negint.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar token = require('./token.js');\nvar _0uint = require('./0uint.js');\nvar common = require('./common.js');\n\nfunction decodeNegint8(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint8(data, pos + 1, options), 2);\n}\nfunction decodeNegint16(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint16(data, pos + 1, options), 3);\n}\nfunction decodeNegint32(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nfunction decodeNegint64(data, pos, _minor, options) {\n  const int = _0uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new token.Token(token.Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ common.decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new token.Token(token.Type.negint, neg1b - BigInt(int), 9);\n}\nfunction encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  _0uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < _0uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < _0uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < _0uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < _0uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};\n\nexports.decodeNegint16 = decodeNegint16;\nexports.decodeNegint32 = decodeNegint32;\nexports.decodeNegint64 = decodeNegint64;\nexports.decodeNegint8 = decodeNegint8;\nexports.encodeNegint = encodeNegint;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}