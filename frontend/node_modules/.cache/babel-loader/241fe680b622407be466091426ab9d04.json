{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar common = require('./common.js');\nvar token = require('./token.js');\nvar jump = require('./jump.js');\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = jump.quick[byt];\n    if (token === undefined) {\n      const decoder = jump.jump[byt];\n      if (!decoder) {\n        throw new Error(`${common.decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${common.decodeErrPrefix} got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${common.decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${common.decodeErrPrefix} got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${common.decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${common.decodeErrPrefix} non-string keys not supported (got ${typeof key})`);\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      if (useMaps && m.has(key) || !useMaps && key in obj) {\n        throw new Error(`${common.decodeErrPrefix} found repeat map key \"${key}\"`);\n      }\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${common.decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token$1 = tokeniser.next();\n  if (token$1.type === token.Type.break) {\n    return BREAK;\n  }\n  if (token$1.type.terminal) {\n    return token$1.value;\n  }\n  if (token$1.type === token.Type.array) {\n    return tokenToArray(token$1, tokeniser, options);\n  }\n  if (token$1.type === token.Type.map) {\n    return tokenToMap(token$1, tokeniser, options);\n  }\n  if (token$1.type === token.Type.tag) {\n    if (options.tags && typeof options.tags[token$1.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token$1.value](tagged);\n    }\n    throw new Error(`${common.decodeErrPrefix} tag not supported (${token$1.value})`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${common.decodeErrPrefix} data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${common.decodeErrPrefix} did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${common.decodeErrPrefix} got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${common.decodeErrPrefix} too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexports.Tokeniser = Tokeniser;\nexports.decode = decode;\nexports.tokensToObject = tokensToObject;","map":{"version":3,"names":["Object","defineProperty","exports","value","common","require","token","jump","defaultDecodeOptions","strict","allowIndefinite","allowUndefined","allowBigInt","Tokeniser","constructor","data","options","pos","done","length","next","byt","quick","undefined","decoder","Error","decodeErrPrefix","toString","padStart","minor","encodedLength","DONE","Symbol","for","BREAK","tokenToArray","tokeniser","arr","i","tokensToObject","Infinity","tokenToMap","useMaps","obj","m","Map","key","rejectDuplicateMapKeys","has","set","token$1","type","Type","break","terminal","array","map","tag","tags","tagged","decode","Uint8Array","assign","tokenizer","decoded"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/cborg/cjs/lib/decode.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar common = require('./common.js');\nvar token = require('./token.js');\nvar jump = require('./jump.js');\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = jump.quick[byt];\n    if (token === undefined) {\n      const decoder = jump.jump[byt];\n      if (!decoder) {\n        throw new Error(`${ common.decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ common.decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ common.decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ common.decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ common.decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ common.decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      if (useMaps && m.has(key) || !useMaps && key in obj) {\n        throw new Error(`${ common.decodeErrPrefix } found repeat map key \"${ key }\"`);\n      }\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ common.decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token$1 = tokeniser.next();\n  if (token$1.type === token.Type.break) {\n    return BREAK;\n  }\n  if (token$1.type.terminal) {\n    return token$1.value;\n  }\n  if (token$1.type === token.Type.array) {\n    return tokenToArray(token$1, tokeniser, options);\n  }\n  if (token$1.type === token.Type.map) {\n    return tokenToMap(token$1, tokeniser, options);\n  }\n  if (token$1.type === token.Type.tag) {\n    if (options.tags && typeof options.tags[token$1.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token$1.value](tagged);\n    }\n    throw new Error(`${ common.decodeErrPrefix } tag not supported (${ token$1.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ common.decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ common.decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ common.decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ common.decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\n\nexports.Tokeniser = Tokeniser;\nexports.decode = decode;\nexports.tokensToObject = tokensToObject;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}