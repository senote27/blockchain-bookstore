{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cborg = require('cborg');\nvar cid = require('multiformats/cid');\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\nvar cborg__namespace = /*#__PURE__*/_interopNamespace(cborg);\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid$1 = cid.CID.asCID(obj);\n  if (!cid$1) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid$1.bytes.byteLength + 1);\n  bytes.set(cid$1.bytes, 1);\n  return [new cborg__namespace.Token(cborg__namespace.Type.tag, CID_CBOR_TAG), new cborg__namespace.Token(cborg__namespace.Type.bytes, bytes)];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return cid.CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nconst name = 'dag-cbor';\nconst code = 113;\nconst encode = node => cborg__namespace.encode(node, encodeOptions);\nconst decode = data => cborg__namespace.decode(data, decodeOptions);\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;","map":{"version":3,"names":["Object","defineProperty","exports","value","cborg","require","cid","_interopNamespace","e","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","cborg__namespace","CID_CBOR_TAG","cidEncoder","obj","asCID","cid$1","CID","bytes","Uint8Array","byteLength","set","Token","Type","tag","undefinedEncoder","Error","numberEncoder","num","Number","isNaN","Infinity","encodeOptions","float64","typeEncoders","undefined","number","cidDecoder","decode","subarray","decodeOptions","allowIndefinite","allowUndefined","allowNaN","allowInfinity","allowBigInt","strict","useMaps","tags","name","code","encode","node","data"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/dag-jose/node_modules/@ipld/dag-cbor/cjs/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cborg = require('cborg');\nvar cid = require('multiformats/cid');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar cborg__namespace = /*#__PURE__*/_interopNamespace(cborg);\n\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid$1 = cid.CID.asCID(obj);\n  if (!cid$1) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid$1.bytes.byteLength + 1);\n  bytes.set(cid$1.bytes, 1);\n  return [\n    new cborg__namespace.Token(cborg__namespace.Type.tag, CID_CBOR_TAG),\n    new cborg__namespace.Token(cborg__namespace.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return cid.CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nconst name = 'dag-cbor';\nconst code = 113;\nconst encode = node => cborg__namespace.encode(node, encodeOptions);\nconst decode = data => cborg__namespace.decode(data, decodeOptions);\n\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}