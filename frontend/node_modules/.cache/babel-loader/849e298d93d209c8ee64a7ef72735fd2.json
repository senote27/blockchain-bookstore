{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar bytes = require('../bytes.js');\nvar varint = require('../varint.js');\nconst create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nconst decode = multihash => {\n  const bytes$1 = bytes.coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes$1);\n  const [size, digestOffset] = varint.decode(bytes$1.subarray(sizeOffset));\n  const digest = bytes$1.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes$1);\n};\nconst equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && bytes.equals(a.bytes, b.bytes);\n  }\n};\nclass Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}\nexports.Digest = Digest;\nexports.create = create;\nexports.decode = decode;\nexports.equals = equals;","map":{"version":3,"names":["Object","defineProperty","exports","value","bytes","require","varint","create","code","digest","size","byteLength","sizeOffset","encodingLength","digestOffset","Uint8Array","encodeTo","set","Digest","decode","multihash","bytes$1","coerce","subarray","Error","equals","a","b","constructor"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/multiformats/cjs/src/hashes/digest.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\nvar varint = require('../varint.js');\n\nconst create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nconst decode = multihash => {\n  const bytes$1 = bytes.coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes$1);\n  const [size, digestOffset] = varint.decode(bytes$1.subarray(sizeOffset));\n  const digest = bytes$1.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes$1);\n};\nconst equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && bytes.equals(a.bytes, b.bytes);\n  }\n};\nclass Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}\n\nexports.Digest = Digest;\nexports.create = create;\nexports.decode = decode;\nexports.equals = equals;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,KAAK,GAAGC,OAAO,CAAC,aAAa,CAAC;AAClC,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAc,CAAC;AAEpC,MAAME,MAAM,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;EAC/B,MAAMC,IAAI,GAAGD,MAAM,CAACE,UAAU;EAC9B,MAAMC,UAAU,GAAGN,MAAM,CAACO,cAAc,CAACL,IAAI,CAAC;EAC9C,MAAMM,YAAY,GAAGF,UAAU,GAAGN,MAAM,CAACO,cAAc,CAACH,IAAI,CAAC;EAC7D,MAAMN,KAAK,GAAG,IAAIW,UAAU,CAACD,YAAY,GAAGJ,IAAI,CAAC;EACjDJ,MAAM,CAACU,QAAQ,CAACR,IAAI,EAAEJ,KAAK,EAAE,CAAC,CAAC;EAC/BE,MAAM,CAACU,QAAQ,CAACN,IAAI,EAAEN,KAAK,EAAEQ,UAAU,CAAC;EACxCR,KAAK,CAACa,GAAG,CAACR,MAAM,EAAEK,YAAY,CAAC;EAC/B,OAAO,IAAII,MAAM,CAACV,IAAI,EAAEE,IAAI,EAAED,MAAM,EAAEL,KAAK,CAAC;AAC9C,CAAC;AACD,MAAMe,MAAM,GAAGC,SAAS,IAAI;EAC1B,MAAMC,OAAO,GAAGjB,KAAK,CAACkB,MAAM,CAACF,SAAS,CAAC;EACvC,MAAM,CAACZ,IAAI,EAAEI,UAAU,CAAC,GAAGN,MAAM,CAACa,MAAM,CAACE,OAAO,CAAC;EACjD,MAAM,CAACX,IAAI,EAAEI,YAAY,CAAC,GAAGR,MAAM,CAACa,MAAM,CAACE,OAAO,CAACE,QAAQ,CAACX,UAAU,CAAC,CAAC;EACxE,MAAMH,MAAM,GAAGY,OAAO,CAACE,QAAQ,CAACX,UAAU,GAAGE,YAAY,CAAC;EAC1D,IAAIL,MAAM,CAACE,UAAU,KAAKD,IAAI,EAAE;IAC9B,MAAM,IAAIc,KAAK,CAAC,kBAAkB,CAAC;EACrC;EACA,OAAO,IAAIN,MAAM,CAACV,IAAI,EAAEE,IAAI,EAAED,MAAM,EAAEY,OAAO,CAAC;AAChD,CAAC;AACD,MAAMI,MAAM,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EACvB,IAAID,CAAC,KAAKC,CAAC,EAAE;IACX,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAOD,CAAC,CAAClB,IAAI,KAAKmB,CAAC,CAACnB,IAAI,IAAIkB,CAAC,CAAChB,IAAI,KAAKiB,CAAC,CAACjB,IAAI,IAAIN,KAAK,CAACqB,MAAM,CAACC,CAAC,CAACtB,KAAK,EAAEuB,CAAC,CAACvB,KAAK,CAAC;EACjF;AACF,CAAC;AACD,MAAMc,MAAM,CAAC;EACXU,WAAWA,CAACpB,IAAI,EAAEE,IAAI,EAAED,MAAM,EAAEL,KAAK,EAAE;IACrC,IAAI,CAACI,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACL,KAAK,GAAGA,KAAK;EACpB;AACF;AAEAF,OAAO,CAACgB,MAAM,GAAGA,MAAM;AACvBhB,OAAO,CAACK,MAAM,GAAGA,MAAM;AACvBL,OAAO,CAACiB,MAAM,GAAGA,MAAM;AACvBjB,OAAO,CAACuB,MAAM,GAAGA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script"}