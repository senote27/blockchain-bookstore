{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar abortSignal = require('../lib/abort-signal.js');\nvar toString = require('uint8arrays/to-string');\nvar mapEvent = require('./map-event.js');\nconst createPut = configure.configure(api => {\n  async function* put(key, value, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: key instanceof Uint8Array ? toString.toString(key) : key.toString(),\n        ...options\n      }),\n      ...(await multipartRequest.multipartRequest([value], controller, options.headers))\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent.mapEvent(event);\n    }\n  }\n  return put;\n});\nexports.createPut = createPut;","map":{"version":3,"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","multipartRequest","abortSignal","toString","mapEvent","createPut","api","put","key","options","controller","AbortController","signal","res","post","searchParams","arg","Uint8Array","headers","event","ndjson"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-http-client/cjs/src/dht/put.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar abortSignal = require('../lib/abort-signal.js');\nvar toString = require('uint8arrays/to-string');\nvar mapEvent = require('./map-event.js');\n\nconst createPut = configure.configure(api => {\n  async function* put(key, value, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: key instanceof Uint8Array ? toString.toString(key) : key.toString(),\n        ...options\n      }),\n      ...await multipartRequest.multipartRequest([value], controller, options.headers)\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent.mapEvent(event);\n    }\n  }\n  return put;\n});\n\nexports.createPut = createPut;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AACjE,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,mCAAmC,CAAC;AACnE,IAAIG,WAAW,GAAGH,OAAO,CAAC,wBAAwB,CAAC;AACnD,IAAII,QAAQ,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;AAC/C,IAAIK,QAAQ,GAAGL,OAAO,CAAC,gBAAgB,CAAC;AAExC,MAAMM,SAAS,GAAGP,SAAS,CAACA,SAAS,CAACQ,GAAG,IAAI;EAC3C,gBAAgBC,GAAGA,CAACC,GAAG,EAAEX,KAAK,EAAEY,OAAO,GAAG,CAAC,CAAC,EAAE;IAC5C,MAAMC,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAGV,WAAW,CAACA,WAAW,CAACQ,UAAU,CAACE,MAAM,EAAEH,OAAO,CAACG,MAAM,CAAC;IACzE,MAAMC,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,SAAS,EAAE;MACpCF,MAAM;MACNG,YAAY,EAAEf,iBAAiB,CAACA,iBAAiB,CAAC;QAChDgB,GAAG,EAAER,GAAG,YAAYS,UAAU,GAAGd,QAAQ,CAACA,QAAQ,CAACK,GAAG,CAAC,GAAGA,GAAG,CAACL,QAAQ,CAAC,CAAC;QACxE,GAAGM;MACL,CAAC,CAAC;MACF,IAAG,MAAMR,gBAAgB,CAACA,gBAAgB,CAAC,CAACJ,KAAK,CAAC,EAAEa,UAAU,EAAED,OAAO,CAACS,OAAO,CAAC;IAClF,CAAC,CAAC;IACF,WAAW,MAAMC,KAAK,IAAIN,GAAG,CAACO,MAAM,CAAC,CAAC,EAAE;MACtC,MAAMhB,QAAQ,CAACA,QAAQ,CAACe,KAAK,CAAC;IAChC;EACF;EACA,OAAOZ,GAAG;AACZ,CAAC,CAAC;AAEFX,OAAO,CAACS,SAAS,GAAGA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script"}