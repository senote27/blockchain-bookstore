{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar decode$1 = require('../decode.js');\nvar token = require('../token.js');\nvar byteUtils = require('../byte-utils.js');\nvar common = require('../common.js');\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${common.decodeErrPrefix} unexpected end of input at position ${this.pos}`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${common.decodeErrPrefix} unexpected token at position ${this.pos}, expected to find '${String.fromCharCode(...str)}'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new token.Token(token.Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${common.decodeErrPrefix} unexpected token at position ${this.pos}`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${common.decodeErrPrefix} unexpected token at position ${this.pos}`);\n      }\n      float = true;\n      this.pos++;\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new token.Token(token.Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new token.Token(num >= 0 ? token.Type.uint : token.Type.negint, num, this.pos - startPos);\n    }\n    return new token.Token(num >= 0 ? token.Type.uint : token.Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${common.decodeErrPrefix} unexpected character at position ${this.pos}; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new token.Token(token.Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${common.decodeErrPrefix} unexpected end of unicode escape sequence at position ${this.pos}`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${common.decodeErrPrefix} unexpected unicode escape character at position ${this.pos}`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${common.decodeErrPrefix} unexpected unicode sequence at position ${this.pos}`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 128) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = this.data[this.pos + 1];\n          if ((secondByte & 192) === 128) {\n            tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n            if (tempCodePoint > 127) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = this.data[this.pos + 1];\n          thirdByte = this.data[this.pos + 2];\n          if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n            tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n            if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = this.data[this.pos + 1];\n          thirdByte = this.data[this.pos + 2];\n          fourthByte = this.data[this.pos + 3];\n          if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n            tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n            if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n        case 92:\n          this.pos++;\n          if (this.done()) {\n            throw new Error(`${common.decodeErrPrefix} unexpected string termination at position ${this.pos}`);\n          }\n          ch1 = this.ch();\n          this.pos++;\n          switch (ch1) {\n            case 34:\n            case 39:\n            case 92:\n            case 47:\n              chars.push(ch1);\n              break;\n            case 98:\n              chars.push(8);\n              break;\n            case 116:\n              chars.push(9);\n              break;\n            case 110:\n              chars.push(10);\n              break;\n            case 102:\n              chars.push(12);\n              break;\n            case 114:\n              chars.push(13);\n              break;\n            case 117:\n              chars.push(readu4());\n              break;\n            default:\n              throw new Error(`${common.decodeErrPrefix} unexpected string escape character at position ${this.pos}`);\n          }\n          break;\n        case 34:\n          this.pos++;\n          return new token.Token(token.Type.string, byteUtils.decodeCodePointsArray(chars), this.pos - startPos);\n        default:\n          if (ch < 32) {\n            throw new Error(`${common.decodeErrPrefix} invalid control character at position ${this.pos}`);\n          } else if (ch < 128) {\n            chars.push(ch);\n            this.pos++;\n          } else {\n            readUtf8Char();\n          }\n      }\n    }\n    throw new Error(`${common.decodeErrPrefix} unexpected end of string at position ${this.pos}`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n      case 123:\n        this.modeStack.push('obj-start');\n        this.pos++;\n        return new token.Token(token.Type.map, Infinity, 1);\n      case 91:\n        this.modeStack.push('array-start');\n        this.pos++;\n        return new token.Token(token.Type.array, Infinity, 1);\n      case 34:\n        {\n          return this.parseString();\n        }\n      case 110:\n        this.expect([110, 117, 108, 108]);\n        return new token.Token(token.Type.null, null, 4);\n      case 102:\n        this.expect([102, 97, 108, 115, 101]);\n        return new token.Token(token.Type.false, false, 5);\n      case 116:\n        this.expect([116, 114, 117, 101]);\n        return new token.Token(token.Type.true, true, 4);\n      case 45:\n      case 48:\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        return this.parseNumber();\n      default:\n        throw new Error(`${common.decodeErrPrefix} unexpected character at position ${this.pos}`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n      case 'value':\n        this.modeStack.pop();\n        return this.parseValue();\n      case 'array-value':\n        {\n          this.modeStack.pop();\n          if (this.ch() === 93) {\n            this.pos++;\n            this.skipWhitespace();\n            return new token.Token(token.Type.break, undefined, 1);\n          }\n          if (this.ch() !== 44) {\n            throw new Error(`${common.decodeErrPrefix} unexpected character at position ${this.pos}, was expecting array delimiter but found '${String.fromCharCode(this.ch())}'`);\n          }\n          this.pos++;\n          this.modeStack.push('array-value');\n          this.skipWhitespace();\n          return this.parseValue();\n        }\n      case 'array-start':\n        {\n          this.modeStack.pop();\n          if (this.ch() === 93) {\n            this.pos++;\n            this.skipWhitespace();\n            return new token.Token(token.Type.break, undefined, 1);\n          }\n          this.modeStack.push('array-value');\n          this.skipWhitespace();\n          return this.parseValue();\n        }\n      case 'obj-key':\n        if (this.ch() === 125) {\n          this.modeStack.pop();\n          this.pos++;\n          this.skipWhitespace();\n          return new token.Token(token.Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${common.decodeErrPrefix} unexpected character at position ${this.pos}, was expecting object delimiter but found '${String.fromCharCode(this.ch())}'`);\n        }\n        this.pos++;\n        this.skipWhitespace();\n      case 'obj-start':\n        {\n          this.modeStack.pop();\n          if (this.ch() === 125) {\n            this.pos++;\n            this.skipWhitespace();\n            return new token.Token(token.Type.break, undefined, 1);\n          }\n          const token$1 = this.parseString();\n          this.skipWhitespace();\n          if (this.ch() !== 58) {\n            throw new Error(`${common.decodeErrPrefix} unexpected character at position ${this.pos}, was expecting key/value delimiter ':' but found '${String.fromCharCode(this.ch())}'`);\n          }\n          this.pos++;\n          this.modeStack.push('obj-value');\n          return token$1;\n        }\n      case 'obj-value':\n        {\n          this.modeStack.pop();\n          this.modeStack.push('obj-key');\n          this.skipWhitespace();\n          return this.parseValue();\n        }\n      default:\n        throw new Error(`${common.decodeErrPrefix} unexpected parse state at position ${this.pos}; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({\n    tokenizer: new Tokenizer(data, options)\n  }, options);\n  return decode$1.decode(data, options);\n}\nexports.Tokenizer = Tokenizer;\nexports.decode = decode;","map":{"version":3,"names":["Object","defineProperty","exports","value","decode$1","require","token","byteUtils","common","Tokenizer","constructor","data","options","pos","modeStack","lastToken","done","length","ch","currentMode","skipWhitespace","c","expect","str","Error","decodeErrPrefix","i","String","fromCharCode","parseNumber","startPos","negative","float","swallow","chars","includes","Token","Type","uint","numStr","apply","subarray","num","parseFloat","allowBigInt","Number","isSafeInteger","negint","BigInt","parseString","l","string","readu4","u4","readUtf8Char","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","ch1","decodeCodePointsArray","parseValue","map","Infinity","array","null","false","true","next","pop","break","undefined","token$1","decode","assign","tokenizer"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/cborg/cjs/lib/json/decode.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar decode$1 = require('../decode.js');\nvar token = require('../token.js');\nvar byteUtils = require('../byte-utils.js');\nvar common = require('../common.js');\n\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${ common.decodeErrPrefix } unexpected end of input at position ${ this.pos }`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${ common.decodeErrPrefix } unexpected token at position ${ this.pos }, expected to find '${ String.fromCharCode(...str) }'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new token.Token(token.Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57\n    ]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${ common.decodeErrPrefix } unexpected token at position ${ this.pos }`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${ common.decodeErrPrefix } unexpected token at position ${ this.pos }`);\n      }\n      float = true;\n      this.pos++;\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new token.Token(token.Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new token.Token(num >= 0 ? token.Type.uint : token.Type.negint, num, this.pos - startPos);\n    }\n    return new token.Token(num >= 0 ? token.Type.uint : token.Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${ common.decodeErrPrefix } unexpected character at position ${ this.pos }; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new token.Token(token.Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${ common.decodeErrPrefix } unexpected end of unicode escape sequence at position ${ this.pos }`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${ common.decodeErrPrefix } unexpected unicode escape character at position ${ this.pos }`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${ common.decodeErrPrefix } unexpected unicode sequence at position ${ this.pos }`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = this.data[this.pos + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        fourthByte = this.data[this.pos + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n      case 92:\n        this.pos++;\n        if (this.done()) {\n          throw new Error(`${ common.decodeErrPrefix } unexpected string termination at position ${ this.pos }`);\n        }\n        ch1 = this.ch();\n        this.pos++;\n        switch (ch1) {\n        case 34:\n        case 39:\n        case 92:\n        case 47:\n          chars.push(ch1);\n          break;\n        case 98:\n          chars.push(8);\n          break;\n        case 116:\n          chars.push(9);\n          break;\n        case 110:\n          chars.push(10);\n          break;\n        case 102:\n          chars.push(12);\n          break;\n        case 114:\n          chars.push(13);\n          break;\n        case 117:\n          chars.push(readu4());\n          break;\n        default:\n          throw new Error(`${ common.decodeErrPrefix } unexpected string escape character at position ${ this.pos }`);\n        }\n        break;\n      case 34:\n        this.pos++;\n        return new token.Token(token.Type.string, byteUtils.decodeCodePointsArray(chars), this.pos - startPos);\n      default:\n        if (ch < 32) {\n          throw new Error(`${ common.decodeErrPrefix } invalid control character at position ${ this.pos }`);\n        } else if (ch < 128) {\n          chars.push(ch);\n          this.pos++;\n        } else {\n          readUtf8Char();\n        }\n      }\n    }\n    throw new Error(`${ common.decodeErrPrefix } unexpected end of string at position ${ this.pos }`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n    case 123:\n      this.modeStack.push('obj-start');\n      this.pos++;\n      return new token.Token(token.Type.map, Infinity, 1);\n    case 91:\n      this.modeStack.push('array-start');\n      this.pos++;\n      return new token.Token(token.Type.array, Infinity, 1);\n    case 34: {\n        return this.parseString();\n      }\n    case 110:\n      this.expect([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return new token.Token(token.Type.null, null, 4);\n    case 102:\n      this.expect([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return new token.Token(token.Type.false, false, 5);\n    case 116:\n      this.expect([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return new token.Token(token.Type.true, true, 4);\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.parseNumber();\n    default:\n      throw new Error(`${ common.decodeErrPrefix } unexpected character at position ${ this.pos }`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n    case 'value':\n      this.modeStack.pop();\n      return this.parseValue();\n    case 'array-value': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new token.Token(token.Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${ common.decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting array delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'array-start': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new token.Token(token.Type.break, undefined, 1);\n        }\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'obj-key':\n      if (this.ch() === 125) {\n        this.modeStack.pop();\n        this.pos++;\n        this.skipWhitespace();\n        return new token.Token(token.Type.break, undefined, 1);\n      }\n      if (this.ch() !== 44) {\n        throw new Error(`${ common.decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting object delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n      }\n      this.pos++;\n      this.skipWhitespace();\n    case 'obj-start': {\n        this.modeStack.pop();\n        if (this.ch() === 125) {\n          this.pos++;\n          this.skipWhitespace();\n          return new token.Token(token.Type.break, undefined, 1);\n        }\n        const token$1 = this.parseString();\n        this.skipWhitespace();\n        if (this.ch() !== 58) {\n          throw new Error(`${ common.decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting key/value delimiter ':' but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('obj-value');\n        return token$1;\n      }\n    case 'obj-value': {\n        this.modeStack.pop();\n        this.modeStack.push('obj-key');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    default:\n      throw new Error(`${ common.decodeErrPrefix } unexpected parse state at position ${ this.pos }; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options);\n  return decode$1.decode(data, options);\n}\n\nexports.Tokenizer = Tokenizer;\nexports.decode = decode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}