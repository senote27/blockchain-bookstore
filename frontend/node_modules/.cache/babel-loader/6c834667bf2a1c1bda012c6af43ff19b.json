{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar objectToCamelWithMetadata = require('../lib/object-to-camel-with-metadata.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nconst createLs = configure.configure(api => {\n  async function* ls(path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path');\n    }\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: cid.CID.asCID(path) ? `/ipfs/${path}` : path,\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(entry));\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(result));\n      }\n    }\n  }\n  return ls;\n});\nfunction toCoreInterface(entry) {\n  if (entry.hash) {\n    entry.cid = cid.CID.parse(entry.hash);\n  }\n  delete entry.hash;\n  entry.type = entry.type === 1 ? 'directory' : 'file';\n  return entry;\n}\nexports.createLs = createLs;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","objectToCamelWithMetadata","configure","toUrlSearchParams","createLs","api","ls","path","options","Error","res","post","signal","searchParams","arg","CID","asCID","long","stream","headers","result","ndjson","entry","Entries","toCoreInterface","hash","parse","type"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-http-client/cjs/src/files/ls.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar objectToCamelWithMetadata = require('../lib/object-to-camel-with-metadata.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createLs = configure.configure(api => {\n  async function* ls(path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path');\n    }\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: cid.CID.asCID(path) ? `/ipfs/${ path }` : path,\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(entry));\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(result));\n      }\n    }\n  }\n  return ls;\n});\nfunction toCoreInterface(entry) {\n  if (entry.hash) {\n    entry.cid = cid.CID.parse(entry.hash);\n  }\n  delete entry.hash;\n  entry.type = entry.type === 1 ? 'directory' : 'file';\n  return entry;\n}\n\nexports.createLs = createLs;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACrC,IAAIC,yBAAyB,GAAGD,OAAO,CAAC,yCAAyC,CAAC;AAClF,IAAIE,SAAS,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AAEjE,MAAMI,QAAQ,GAAGF,SAAS,CAACA,SAAS,CAACG,GAAG,IAAI;EAC1C,gBAAgBC,EAAEA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACrC,IAAI,CAACD,IAAI,EAAE;MACT,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;IAClD;IACA,MAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,UAAU,EAAE;MACrCC,MAAM,EAAEJ,OAAO,CAACI,MAAM;MACtBC,YAAY,EAAEV,iBAAiB,CAACA,iBAAiB,CAAC;QAChDW,GAAG,EAAEf,GAAG,CAACgB,GAAG,CAACC,KAAK,CAACT,IAAI,CAAC,GAAG,SAAUA,IAAI,EAAG,GAAGA,IAAI;QACnDU,IAAI,EAAE,IAAI;QACV,GAAGT,OAAO;QACVU,MAAM,EAAE;MACV,CAAC,CAAC;MACFC,OAAO,EAAEX,OAAO,CAACW;IACnB,CAAC,CAAC;IACF,WAAW,MAAMC,MAAM,IAAIV,GAAG,CAACW,MAAM,CAAC,CAAC,EAAE;MACvC,IAAI,SAAS,IAAID,MAAM,EAAE;QACvB,KAAK,MAAME,KAAK,IAAIF,MAAM,CAACG,OAAO,IAAI,EAAE,EAAE;UACxC,MAAMC,eAAe,CAACvB,yBAAyB,CAACA,yBAAyB,CAACqB,KAAK,CAAC,CAAC;QACnF;MACF,CAAC,MAAM;QACL,MAAME,eAAe,CAACvB,yBAAyB,CAACA,yBAAyB,CAACmB,MAAM,CAAC,CAAC;MACpF;IACF;EACF;EACA,OAAOd,EAAE;AACX,CAAC,CAAC;AACF,SAASkB,eAAeA,CAACF,KAAK,EAAE;EAC9B,IAAIA,KAAK,CAACG,IAAI,EAAE;IACdH,KAAK,CAACvB,GAAG,GAAGA,GAAG,CAACgB,GAAG,CAACW,KAAK,CAACJ,KAAK,CAACG,IAAI,CAAC;EACvC;EACA,OAAOH,KAAK,CAACG,IAAI;EACjBH,KAAK,CAACK,IAAI,GAAGL,KAAK,CAACK,IAAI,KAAK,CAAC,GAAG,WAAW,GAAG,MAAM;EACpD,OAAOL,KAAK;AACd;AAEAzB,OAAO,CAACO,QAAQ,GAAGA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}