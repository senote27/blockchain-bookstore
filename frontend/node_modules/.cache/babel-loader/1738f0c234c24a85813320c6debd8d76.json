{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar debug = require('debug');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar httpRpcWireFormat = require('../lib/http-rpc-wire-format.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nconst log = debug__default[\"default\"]('ipfs-http-client:pubsub:subscribe');\nconst createSubscribe = (options, subsTracker) => {\n  return configure.configure(api => {\n    async function subscribe(topic, handler, options = {}) {\n      options.signal = subsTracker.subscribe(topic, handler, options.signal);\n      let done;\n      let fail;\n      const result = new Promise((resolve, reject) => {\n        done = resolve;\n        fail = reject;\n      });\n      const ffWorkaround = setTimeout(() => done(), 1000);\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams({\n          arg: httpRpcWireFormat.textToUrlSafeRpc(topic),\n          ...options\n        }),\n        headers: options.headers\n      }).catch(err => {\n        subsTracker.unsubscribe(topic, handler);\n        fail(err);\n      }).then(response => {\n        clearTimeout(ffWorkaround);\n        if (!response) {\n          return;\n        }\n        readMessages(response, {\n          onMessage: handler,\n          onEnd: () => subsTracker.unsubscribe(topic, handler),\n          onError: options.onError\n        });\n        done();\n      });\n      return result;\n    }\n    return subscribe;\n  })(options);\n};\nasync function readMessages(response, {\n  onMessage,\n  onEnd,\n  onError\n}) {\n  onError = onError || log;\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue;\n        }\n        onMessage({\n          from: msg.from,\n          data: httpRpcWireFormat.rpcToBytes(msg.data),\n          seqno: httpRpcWireFormat.rpcToBytes(msg.seqno),\n          topicIDs: httpRpcWireFormat.rpcArrayToTextArray(msg.topicIDs)\n        });\n      } catch (err) {\n        err.message = `Failed to parse pubsub message: ${err.message}`;\n        onError(err, false, msg);\n      }\n    }\n  } catch (err) {\n    if (!isAbortError(err)) {\n      onError(err, true);\n    }\n  } finally {\n    onEnd();\n  }\n}\nconst isAbortError = error => {\n  switch (error.type) {\n    case 'aborted':\n      return true;\n    case 'abort':\n      return true;\n    default:\n      return error.name === 'AbortError';\n  }\n};\nexports.createSubscribe = createSubscribe;","map":{"version":3,"names":["Object","defineProperty","exports","value","debug","require","configure","toUrlSearchParams","httpRpcWireFormat","_interopDefaultLegacy","e","debug__default","log","createSubscribe","options","subsTracker","api","subscribe","topic","handler","signal","done","fail","result","Promise","resolve","reject","ffWorkaround","setTimeout","post","searchParams","arg","textToUrlSafeRpc","headers","catch","err","unsubscribe","then","response","clearTimeout","readMessages","onMessage","onEnd","onError","msg","ndjson","from","data","rpcToBytes","seqno","topicIDs","rpcArrayToTextArray","message","isAbortError","error","type","name"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-http-client/cjs/src/pubsub/subscribe.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar httpRpcWireFormat = require('../lib/http-rpc-wire-format.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs-http-client:pubsub:subscribe');\nconst createSubscribe = (options, subsTracker) => {\n  return configure.configure(api => {\n    async function subscribe(topic, handler, options = {}) {\n      options.signal = subsTracker.subscribe(topic, handler, options.signal);\n      let done;\n      let fail;\n      const result = new Promise((resolve, reject) => {\n        done = resolve;\n        fail = reject;\n      });\n      const ffWorkaround = setTimeout(() => done(), 1000);\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams({\n          arg: httpRpcWireFormat.textToUrlSafeRpc(topic),\n          ...options\n        }),\n        headers: options.headers\n      }).catch(err => {\n        subsTracker.unsubscribe(topic, handler);\n        fail(err);\n      }).then(response => {\n        clearTimeout(ffWorkaround);\n        if (!response) {\n          return;\n        }\n        readMessages(response, {\n          onMessage: handler,\n          onEnd: () => subsTracker.unsubscribe(topic, handler),\n          onError: options.onError\n        });\n        done();\n      });\n      return result;\n    }\n    return subscribe;\n  })(options);\n};\nasync function readMessages(response, {onMessage, onEnd, onError}) {\n  onError = onError || log;\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue;\n        }\n        onMessage({\n          from: msg.from,\n          data: httpRpcWireFormat.rpcToBytes(msg.data),\n          seqno: httpRpcWireFormat.rpcToBytes(msg.seqno),\n          topicIDs: httpRpcWireFormat.rpcArrayToTextArray(msg.topicIDs)\n        });\n      } catch (err) {\n        err.message = `Failed to parse pubsub message: ${ err.message }`;\n        onError(err, false, msg);\n      }\n    }\n  } catch (err) {\n    if (!isAbortError(err)) {\n      onError(err, true);\n    }\n  } finally {\n    onEnd();\n  }\n}\nconst isAbortError = error => {\n  switch (error.type) {\n  case 'aborted':\n    return true;\n  case 'abort':\n    return true;\n  default:\n    return error.name === 'AbortError';\n  }\n};\n\nexports.createSubscribe = createSubscribe;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC5B,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAgC,CAAC;AACjE,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AAEjE,SAASI,qBAAqBA,CAAEC,CAAC,EAAE;EAAE,OAAOA,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAI,SAAS,IAAIA,CAAC,GAAGA,CAAC,GAAG;IAAE,SAAS,EAAEA;EAAE,CAAC;AAAE;AAEjH,IAAIC,cAAc,GAAG,aAAaF,qBAAqB,CAACL,KAAK,CAAC;AAE9D,MAAMQ,GAAG,GAAGD,cAAc,CAAC,SAAS,CAAC,CAAC,mCAAmC,CAAC;AAC1E,MAAME,eAAe,GAAGA,CAACC,OAAO,EAAEC,WAAW,KAAK;EAChD,OAAOT,SAAS,CAACA,SAAS,CAACU,GAAG,IAAI;IAChC,eAAeC,SAASA,CAACC,KAAK,EAAEC,OAAO,EAAEL,OAAO,GAAG,CAAC,CAAC,EAAE;MACrDA,OAAO,CAACM,MAAM,GAAGL,WAAW,CAACE,SAAS,CAACC,KAAK,EAAEC,OAAO,EAAEL,OAAO,CAACM,MAAM,CAAC;MACtE,IAAIC,IAAI;MACR,IAAIC,IAAI;MACR,MAAMC,MAAM,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QAC9CL,IAAI,GAAGI,OAAO;QACdH,IAAI,GAAGI,MAAM;MACf,CAAC,CAAC;MACF,MAAMC,YAAY,GAAGC,UAAU,CAAC,MAAMP,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;MACnDL,GAAG,CAACa,IAAI,CAAC,YAAY,EAAE;QACrBT,MAAM,EAAEN,OAAO,CAACM,MAAM;QACtBU,YAAY,EAAEvB,iBAAiB,CAACA,iBAAiB,CAAC;UAChDwB,GAAG,EAAEvB,iBAAiB,CAACwB,gBAAgB,CAACd,KAAK,CAAC;UAC9C,GAAGJ;QACL,CAAC,CAAC;QACFmB,OAAO,EAAEnB,OAAO,CAACmB;MACnB,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;QACdpB,WAAW,CAACqB,WAAW,CAAClB,KAAK,EAAEC,OAAO,CAAC;QACvCG,IAAI,CAACa,GAAG,CAAC;MACX,CAAC,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAI;QAClBC,YAAY,CAACZ,YAAY,CAAC;QAC1B,IAAI,CAACW,QAAQ,EAAE;UACb;QACF;QACAE,YAAY,CAACF,QAAQ,EAAE;UACrBG,SAAS,EAAEtB,OAAO;UAClBuB,KAAK,EAAEA,CAAA,KAAM3B,WAAW,CAACqB,WAAW,CAAClB,KAAK,EAAEC,OAAO,CAAC;UACpDwB,OAAO,EAAE7B,OAAO,CAAC6B;QACnB,CAAC,CAAC;QACFtB,IAAI,CAAC,CAAC;MACR,CAAC,CAAC;MACF,OAAOE,MAAM;IACf;IACA,OAAON,SAAS;EAClB,CAAC,CAAC,CAACH,OAAO,CAAC;AACb,CAAC;AACD,eAAe0B,YAAYA,CAACF,QAAQ,EAAE;EAACG,SAAS;EAAEC,KAAK;EAAEC;AAAO,CAAC,EAAE;EACjEA,OAAO,GAAGA,OAAO,IAAI/B,GAAG;EACxB,IAAI;IACF,WAAW,MAAMgC,GAAG,IAAIN,QAAQ,CAACO,MAAM,CAAC,CAAC,EAAE;MACzC,IAAI;QACF,IAAI,CAACD,GAAG,CAACE,IAAI,EAAE;UACb;QACF;QACAL,SAAS,CAAC;UACRK,IAAI,EAAEF,GAAG,CAACE,IAAI;UACdC,IAAI,EAAEvC,iBAAiB,CAACwC,UAAU,CAACJ,GAAG,CAACG,IAAI,CAAC;UAC5CE,KAAK,EAAEzC,iBAAiB,CAACwC,UAAU,CAACJ,GAAG,CAACK,KAAK,CAAC;UAC9CC,QAAQ,EAAE1C,iBAAiB,CAAC2C,mBAAmB,CAACP,GAAG,CAACM,QAAQ;QAC9D,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOf,GAAG,EAAE;QACZA,GAAG,CAACiB,OAAO,GAAG,mCAAoCjB,GAAG,CAACiB,OAAO,EAAG;QAChET,OAAO,CAACR,GAAG,EAAE,KAAK,EAAES,GAAG,CAAC;MAC1B;IACF;EACF,CAAC,CAAC,OAAOT,GAAG,EAAE;IACZ,IAAI,CAACkB,YAAY,CAAClB,GAAG,CAAC,EAAE;MACtBQ,OAAO,CAACR,GAAG,EAAE,IAAI,CAAC;IACpB;EACF,CAAC,SAAS;IACRO,KAAK,CAAC,CAAC;EACT;AACF;AACA,MAAMW,YAAY,GAAGC,KAAK,IAAI;EAC5B,QAAQA,KAAK,CAACC,IAAI;IAClB,KAAK,SAAS;MACZ,OAAO,IAAI;IACb,KAAK,OAAO;MACV,OAAO,IAAI;IACb;MACE,OAAOD,KAAK,CAACE,IAAI,KAAK,YAAY;EACpC;AACF,CAAC;AAEDtD,OAAO,CAACW,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script"}