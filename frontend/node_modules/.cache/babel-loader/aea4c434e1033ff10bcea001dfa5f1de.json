{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar objectToCamel = require('./lib/object-to-camel.js');\nvar multiaddr = require('multiaddr');\nvar configure = require('./lib/configure.js');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\nconst createId = configure.configure(api => {\n  async function id(options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    const output = {\n      ...objectToCamel.objectToCamel(data)\n    };\n    if (output.addresses) {\n      output.addresses = output.addresses.map(ma => new multiaddr.Multiaddr(ma));\n    }\n    return output;\n  }\n  return id;\n});\nexports.createId = createId;","map":{"version":3,"names":["Object","defineProperty","exports","value","objectToCamel","require","multiaddr","configure","toUrlSearchParams","createId","api","id","options","res","post","signal","searchParams","arg","peerId","toString","undefined","headers","data","json","output","addresses","map","ma","Multiaddr"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-http-client/cjs/src/id.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar objectToCamel = require('./lib/object-to-camel.js');\nvar multiaddr = require('multiaddr');\nvar configure = require('./lib/configure.js');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\n\nconst createId = configure.configure(api => {\n  async function id(options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    const output = { ...objectToCamel.objectToCamel(data) };\n    if (output.addresses) {\n      output.addresses = output.addresses.map(ma => new multiaddr.Multiaddr(ma));\n    }\n    return output;\n  }\n  return id;\n});\n\nexports.createId = createId;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,aAAa,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AACvD,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIE,SAAS,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAC7C,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,+BAA+B,CAAC;AAEhE,MAAMI,QAAQ,GAAGF,SAAS,CAACA,SAAS,CAACG,GAAG,IAAI;EAC1C,eAAeC,EAAEA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9B,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,IAAI,EAAE;MAC/BC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAER,iBAAiB,CAACA,iBAAiB,CAAC;QAChDS,GAAG,EAAEL,OAAO,CAACM,MAAM,GAAGN,OAAO,CAACM,MAAM,CAACC,QAAQ,CAAC,CAAC,GAAGC,SAAS;QAC3D,GAAGR;MACL,CAAC,CAAC;MACFS,OAAO,EAAET,OAAO,CAACS;IACnB,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,CAAC;IAC7B,MAAMC,MAAM,GAAG;MAAE,GAAGpB,aAAa,CAACA,aAAa,CAACkB,IAAI;IAAE,CAAC;IACvD,IAAIE,MAAM,CAACC,SAAS,EAAE;MACpBD,MAAM,CAACC,SAAS,GAAGD,MAAM,CAACC,SAAS,CAACC,GAAG,CAACC,EAAE,IAAI,IAAIrB,SAAS,CAACsB,SAAS,CAACD,EAAE,CAAC,CAAC;IAC5E;IACA,OAAOH,MAAM;EACf;EACA,OAAOb,EAAE;AACX,CAAC,CAAC;AAEFT,OAAO,CAACO,QAAQ,GAAGA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}