{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nconst createAddAll = configure.configure(api => {\n  async function* addAll(source, options = {}) {\n    for await (const {\n      path,\n      recursive,\n      metadata\n    } of normaliseInput.normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      });\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) {\n          for (const cid$1 of pin.Pins) {\n            yield cid.CID.parse(cid$1);\n          }\n          continue;\n        }\n        yield cid.CID.parse(pin);\n      }\n    }\n  }\n  return addAll;\n});\nexports.createAddAll = createAddAll;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","configure","normaliseInput","toUrlSearchParams","createAddAll","api","addAll","source","options","path","recursive","metadata","res","post","signal","searchParams","arg","JSON","stringify","undefined","stream","headers","pin","ndjson","Pins","cid$1","CID","parse"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-http-client/cjs/src/pin/add-all.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createAddAll = configure.configure(api => {\n  async function* addAll(source, options = {}) {\n    for await (const {path, recursive, metadata} of normaliseInput.normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      });\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) {\n          for (const cid$1 of pin.Pins) {\n            yield cid.CID.parse(cid$1);\n          }\n          continue;\n        }\n        yield cid.CID.parse(pin);\n      }\n    }\n  }\n  return addAll;\n});\n\nexports.createAddAll = createAddAll;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACrC,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIE,cAAc,GAAGF,OAAO,CAAC,sCAAsC,CAAC;AACpE,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AAEjE,MAAMI,YAAY,GAAGH,SAAS,CAACA,SAAS,CAACI,GAAG,IAAI;EAC9C,gBAAgBC,MAAMA,CAACC,MAAM,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC3C,WAAW,MAAM;MAACC,IAAI;MAAEC,SAAS;MAAEC;IAAQ,CAAC,IAAIT,cAAc,CAACA,cAAc,CAACK,MAAM,CAAC,EAAE;MACrF,MAAMK,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,SAAS,EAAE;QACpCC,MAAM,EAAEN,OAAO,CAACM,MAAM;QACtBC,YAAY,EAAEZ,iBAAiB,CAACA,iBAAiB,CAAC;UAChD,GAAGK,OAAO;UACVQ,GAAG,EAAEP,IAAI;UACTC,SAAS;UACTC,QAAQ,EAAEA,QAAQ,GAAGM,IAAI,CAACC,SAAS,CAACP,QAAQ,CAAC,GAAGQ,SAAS;UACzDC,MAAM,EAAE;QACV,CAAC,CAAC;QACFC,OAAO,EAAEb,OAAO,CAACa;MACnB,CAAC,CAAC;MACF,WAAW,MAAMC,GAAG,IAAIV,GAAG,CAACW,MAAM,CAAC,CAAC,EAAE;QACpC,IAAID,GAAG,CAACE,IAAI,EAAE;UACZ,KAAK,MAAMC,KAAK,IAAIH,GAAG,CAACE,IAAI,EAAE;YAC5B,MAAMzB,GAAG,CAAC2B,GAAG,CAACC,KAAK,CAACF,KAAK,CAAC;UAC5B;UACA;QACF;QACA,MAAM1B,GAAG,CAAC2B,GAAG,CAACC,KAAK,CAACL,GAAG,CAAC;MAC1B;IACF;EACF;EACA,OAAOhB,MAAM;AACf,CAAC,CAAC;AAEFT,OAAO,CAACO,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script"}