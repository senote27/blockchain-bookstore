{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nconst createNet = configure.configure(api => {\n  async function net(options = {}) {\n    const res = await api.post('diag/net', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return net;\n});\nexports.createNet = createNet;","map":{"version":3,"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createNet","api","net","options","res","post","signal","searchParams","headers","json"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-http-client/cjs/src/diag/net.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createNet = configure.configure(api => {\n  async function net(options = {}) {\n    const res = await api.post('diag/net', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return net;\n});\n\nexports.createNet = createNet;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAEjE,MAAME,SAAS,GAAGH,SAAS,CAACA,SAAS,CAACI,GAAG,IAAI;EAC3C,eAAeC,GAAGA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC/B,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,UAAU,EAAE;MACrCC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAER,iBAAiB,CAACA,iBAAiB,CAACI,OAAO,CAAC;MAC1DK,OAAO,EAAEL,OAAO,CAACK;IACnB,CAAC,CAAC;IACF,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;EACnB;EACA,OAAOP,GAAG;AACZ,CAAC,CAAC;AAEFP,OAAO,CAACK,SAAS,GAAGA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script"}