{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nconst LOAD_HASHER = codeOrName => Promise.reject(new Error(`No hasher found for \"${codeOrName}\"`));\nclass Multihashes {\n  constructor(options) {\n    this._hashersByName = {};\n    this._hashersByCode = {};\n    this._loadHasher = options.loadHasher || LOAD_HASHER;\n    for (const hasher of options.hashers) {\n      this.addHasher(hasher);\n    }\n  }\n  addHasher(hasher) {\n    if (this._hashersByName[hasher.name] || this._hashersByCode[hasher.code]) {\n      throw new Error(`Resolver already exists for codec \"${hasher.name}\"`);\n    }\n    this._hashersByName[hasher.name] = hasher;\n    this._hashersByCode[hasher.code] = hasher;\n  }\n  removeHasher(hasher) {\n    delete this._hashersByName[hasher.name];\n    delete this._hashersByCode[hasher.code];\n  }\n  async getHasher(code) {\n    const table = typeof code === 'string' ? this._hashersByName : this._hashersByCode;\n    if (table[code]) {\n      return table[code];\n    }\n    const hasher = await this._loadHasher(code);\n    if (table[code] == null) {\n      this.addHasher(hasher);\n    }\n    return hasher;\n  }\n  listHashers() {\n    return Object.values(this._hashersByName);\n  }\n}\nexports.Multihashes = Multihashes;","map":{"version":3,"names":["Object","defineProperty","exports","value","LOAD_HASHER","codeOrName","Promise","reject","Error","Multihashes","constructor","options","_hashersByName","_hashersByCode","_loadHasher","loadHasher","hasher","hashers","addHasher","name","code","removeHasher","getHasher","table","listHashers","values"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-core-utils/cjs/src/multihashes.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst LOAD_HASHER = codeOrName => Promise.reject(new Error(`No hasher found for \"${ codeOrName }\"`));\nclass Multihashes {\n  constructor(options) {\n    this._hashersByName = {};\n    this._hashersByCode = {};\n    this._loadHasher = options.loadHasher || LOAD_HASHER;\n    for (const hasher of options.hashers) {\n      this.addHasher(hasher);\n    }\n  }\n  addHasher(hasher) {\n    if (this._hashersByName[hasher.name] || this._hashersByCode[hasher.code]) {\n      throw new Error(`Resolver already exists for codec \"${ hasher.name }\"`);\n    }\n    this._hashersByName[hasher.name] = hasher;\n    this._hashersByCode[hasher.code] = hasher;\n  }\n  removeHasher(hasher) {\n    delete this._hashersByName[hasher.name];\n    delete this._hashersByCode[hasher.code];\n  }\n  async getHasher(code) {\n    const table = typeof code === 'string' ? this._hashersByName : this._hashersByCode;\n    if (table[code]) {\n      return table[code];\n    }\n    const hasher = await this._loadHasher(code);\n    if (table[code] == null) {\n      this.addHasher(hasher);\n    }\n    return hasher;\n  }\n  listHashers() {\n    return Object.values(this._hashersByName);\n  }\n}\n\nexports.Multihashes = Multihashes;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,MAAMC,WAAW,GAAGC,UAAU,IAAIC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,wBAAyBH,UAAU,GAAI,CAAC,CAAC;AACpG,MAAMI,WAAW,CAAC;EAChBC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,WAAW,GAAGH,OAAO,CAACI,UAAU,IAAIX,WAAW;IACpD,KAAK,MAAMY,MAAM,IAAIL,OAAO,CAACM,OAAO,EAAE;MACpC,IAAI,CAACC,SAAS,CAACF,MAAM,CAAC;IACxB;EACF;EACAE,SAASA,CAACF,MAAM,EAAE;IAChB,IAAI,IAAI,CAACJ,cAAc,CAACI,MAAM,CAACG,IAAI,CAAC,IAAI,IAAI,CAACN,cAAc,CAACG,MAAM,CAACI,IAAI,CAAC,EAAE;MACxE,MAAM,IAAIZ,KAAK,CAAC,sCAAuCQ,MAAM,CAACG,IAAI,GAAI,CAAC;IACzE;IACA,IAAI,CAACP,cAAc,CAACI,MAAM,CAACG,IAAI,CAAC,GAAGH,MAAM;IACzC,IAAI,CAACH,cAAc,CAACG,MAAM,CAACI,IAAI,CAAC,GAAGJ,MAAM;EAC3C;EACAK,YAAYA,CAACL,MAAM,EAAE;IACnB,OAAO,IAAI,CAACJ,cAAc,CAACI,MAAM,CAACG,IAAI,CAAC;IACvC,OAAO,IAAI,CAACN,cAAc,CAACG,MAAM,CAACI,IAAI,CAAC;EACzC;EACA,MAAME,SAASA,CAACF,IAAI,EAAE;IACpB,MAAMG,KAAK,GAAG,OAAOH,IAAI,KAAK,QAAQ,GAAG,IAAI,CAACR,cAAc,GAAG,IAAI,CAACC,cAAc;IAClF,IAAIU,KAAK,CAACH,IAAI,CAAC,EAAE;MACf,OAAOG,KAAK,CAACH,IAAI,CAAC;IACpB;IACA,MAAMJ,MAAM,GAAG,MAAM,IAAI,CAACF,WAAW,CAACM,IAAI,CAAC;IAC3C,IAAIG,KAAK,CAACH,IAAI,CAAC,IAAI,IAAI,EAAE;MACvB,IAAI,CAACF,SAAS,CAACF,MAAM,CAAC;IACxB;IACA,OAAOA,MAAM;EACf;EACAQ,WAAWA,CAAA,EAAG;IACZ,OAAOxB,MAAM,CAACyB,MAAM,CAAC,IAAI,CAACb,cAAc,CAAC;EAC3C;AACF;AAEAV,OAAO,CAACO,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script"}