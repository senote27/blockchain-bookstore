{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nconst createSet = configure.configure(api => {\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type');\n    }\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    };\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(params),\n      headers: options.headers\n    });\n    await res.text();\n  };\n  return set;\n});\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n    case 'boolean':\n      return {\n        arg: [key, value.toString()],\n        bool: true\n      };\n    case 'string':\n      return {\n        arg: [key, value]\n      };\n    default:\n      return {\n        arg: [key, JSON.stringify(value)],\n        json: true\n      };\n  }\n};\nexports.createSet = createSet;","map":{"version":3,"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createSet","api","set","key","options","Error","params","encodeParam","res","post","signal","searchParams","headers","text","arg","toString","bool","JSON","stringify","json"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-http-client/cjs/src/config/set.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createSet = configure.configure(api => {\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type');\n    }\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    };\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(params),\n      headers: options.headers\n    });\n    await res.text();\n  };\n  return set;\n});\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n  case 'boolean':\n    return {\n      arg: [\n        key,\n        value.toString()\n      ],\n      bool: true\n    };\n  case 'string':\n    return {\n      arg: [\n        key,\n        value\n      ]\n    };\n  default:\n    return {\n      arg: [\n        key,\n        JSON.stringify(value)\n      ],\n      json: true\n    };\n  }\n};\n\nexports.createSet = createSet;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAEjE,MAAME,SAAS,GAAGH,SAAS,CAACA,SAAS,CAACI,GAAG,IAAI;EAC3C,MAAMC,GAAG,GAAG,MAAAA,CAAOC,GAAG,EAAEP,KAAK,EAAEQ,OAAO,GAAG,CAAC,CAAC,KAAK;IAC9C,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIE,KAAK,CAAC,kBAAkB,CAAC;IACrC;IACA,MAAMC,MAAM,GAAG;MACb,GAAGF,OAAO;MACV,GAAGG,WAAW,CAACJ,GAAG,EAAEP,KAAK;IAC3B,CAAC;IACD,MAAMY,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,QAAQ,EAAE;MACnCC,MAAM,EAAEN,OAAO,CAACM,MAAM;MACtBC,YAAY,EAAEZ,iBAAiB,CAACA,iBAAiB,CAACO,MAAM,CAAC;MACzDM,OAAO,EAAER,OAAO,CAACQ;IACnB,CAAC,CAAC;IACF,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAClB,CAAC;EACD,OAAOX,GAAG;AACZ,CAAC,CAAC;AACF,MAAMK,WAAW,GAAGA,CAACJ,GAAG,EAAEP,KAAK,KAAK;EAClC,QAAQ,OAAOA,KAAK;IACpB,KAAK,SAAS;MACZ,OAAO;QACLkB,GAAG,EAAE,CACHX,GAAG,EACHP,KAAK,CAACmB,QAAQ,CAAC,CAAC,CACjB;QACDC,IAAI,EAAE;MACR,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QACLF,GAAG,EAAE,CACHX,GAAG,EACHP,KAAK;MAET,CAAC;IACH;MACE,OAAO;QACLkB,GAAG,EAAE,CACHX,GAAG,EACHc,IAAI,CAACC,SAAS,CAACtB,KAAK,CAAC,CACtB;QACDuB,IAAI,EAAE;MACR,CAAC;EACH;AACF,CAAC;AAEDxB,OAAO,CAACK,SAAS,GAAGA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script"}