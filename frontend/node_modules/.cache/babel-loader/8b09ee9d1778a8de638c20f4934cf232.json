{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar objectToCamel = require('./lib/object-to-camel.js');\nvar configure = require('./lib/configure.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\nvar abortSignal = require('./lib/abort-signal.js');\nconst createAddAll = configure.configure(api => {\n  async function* addAll(source, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const {\n      headers,\n      body,\n      total,\n      parts\n    } = await multipartRequest.multipartRequest(source, controller, options.headers);\n    const [progressFn, onUploadProgress] = typeof options.progress === 'function' ? createProgressHandler(total, parts, options.progress) : [undefined, undefined];\n    const res = await api.post('add', {\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        'stream-channels': true,\n        ...options,\n        progress: Boolean(progressFn)\n      }),\n      onUploadProgress,\n      signal,\n      headers,\n      body\n    });\n    for await (let file of res.ndjson()) {\n      file = objectToCamel.objectToCamel(file);\n      if (file.hash !== undefined) {\n        yield toCoreInterface(file);\n      } else if (progressFn) {\n        progressFn(file.bytes || 0, file.name);\n      }\n    }\n  }\n  return addAll;\n});\nconst createProgressHandler = (total, parts, progress) => parts ? [undefined, createOnUploadProgress(total, parts, progress)] : [progress, undefined];\nconst createOnUploadProgress = (size, parts, progress) => {\n  let index = 0;\n  const count = parts.length;\n  return ({\n    loaded,\n    total\n  }) => {\n    const position = Math.floor(loaded / total * size);\n    while (index < count) {\n      const {\n        start,\n        end,\n        name\n      } = parts[index];\n      if (position < end) {\n        progress(position - start, name);\n        break;\n      } else {\n        progress(end - start, name);\n        index += 1;\n      }\n    }\n  };\n};\nfunction toCoreInterface({\n  name,\n  hash,\n  size,\n  mode,\n  mtime,\n  mtimeNsecs\n}) {\n  const output = {\n    path: name,\n    cid: cid.CID.parse(hash),\n    size: parseInt(size)\n  };\n  if (mode != null) {\n    output.mode = parseInt(mode, 8);\n  }\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    };\n  }\n  return output;\n}\nexports.createAddAll = createAddAll;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","objectToCamel","configure","multipartRequest","toUrlSearchParams","abortSignal","createAddAll","api","addAll","source","options","controller","AbortController","signal","headers","body","total","parts","progressFn","onUploadProgress","progress","createProgressHandler","undefined","res","post","searchParams","Boolean","file","ndjson","hash","toCoreInterface","bytes","name","createOnUploadProgress","size","index","count","length","loaded","position","Math","floor","start","end","mode","mtime","mtimeNsecs","output","path","CID","parse","parseInt","secs","nsecs"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-http-client/cjs/src/add-all.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar objectToCamel = require('./lib/object-to-camel.js');\nvar configure = require('./lib/configure.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\nvar abortSignal = require('./lib/abort-signal.js');\n\nconst createAddAll = configure.configure(api => {\n  async function* addAll(source, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const {headers, body, total, parts} = await multipartRequest.multipartRequest(source, controller, options.headers);\n    const [progressFn, onUploadProgress] = typeof options.progress === 'function' ? createProgressHandler(total, parts, options.progress) : [\n      undefined,\n      undefined\n    ];\n    const res = await api.post('add', {\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        'stream-channels': true,\n        ...options,\n        progress: Boolean(progressFn)\n      }),\n      onUploadProgress,\n      signal,\n      headers,\n      body\n    });\n    for await (let file of res.ndjson()) {\n      file = objectToCamel.objectToCamel(file);\n      if (file.hash !== undefined) {\n        yield toCoreInterface(file);\n      } else if (progressFn) {\n        progressFn(file.bytes || 0, file.name);\n      }\n    }\n  }\n  return addAll;\n});\nconst createProgressHandler = (total, parts, progress) => parts ? [\n  undefined,\n  createOnUploadProgress(total, parts, progress)\n] : [\n  progress,\n  undefined\n];\nconst createOnUploadProgress = (size, parts, progress) => {\n  let index = 0;\n  const count = parts.length;\n  return ({loaded, total}) => {\n    const position = Math.floor(loaded / total * size);\n    while (index < count) {\n      const {start, end, name} = parts[index];\n      if (position < end) {\n        progress(position - start, name);\n        break;\n      } else {\n        progress(end - start, name);\n        index += 1;\n      }\n    }\n  };\n};\nfunction toCoreInterface({name, hash, size, mode, mtime, mtimeNsecs}) {\n  const output = {\n    path: name,\n    cid: cid.CID.parse(hash),\n    size: parseInt(size)\n  };\n  if (mode != null) {\n    output.mode = parseInt(mode, 8);\n  }\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    };\n  }\n  return output;\n}\n\nexports.createAddAll = createAddAll;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}