{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nconst createRm = configure.configure(api => {\n  async function* rm(cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid];\n    }\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed);\n    }\n  }\n  return rm;\n});\nfunction toCoreInterface(removed) {\n  const out = {\n    cid: cid.CID.parse(removed.Hash)\n  };\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n  return out;\n}\nexports.createRm = createRm;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","configure","toUrlSearchParams","createRm","api","rm","options","Array","isArray","res","post","signal","searchParams","arg","map","toString","headers","removed","ndjson","toCoreInterface","out","CID","parse","Hash","Error","error"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/node_modules/ipfs-http-client/cjs/src/block/rm.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createRm = configure.configure(api => {\n  async function* rm(cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid];\n    }\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed);\n    }\n  }\n  return rm;\n});\nfunction toCoreInterface(removed) {\n  const out = { cid: cid.CID.parse(removed.Hash) };\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n  return out;\n}\n\nexports.createRm = createRm;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACrC,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAgC,CAAC;AAEjE,MAAMG,QAAQ,GAAGF,SAAS,CAACA,SAAS,CAACG,GAAG,IAAI;EAC1C,gBAAgBC,EAAEA,CAACN,GAAG,EAAEO,OAAO,GAAG,CAAC,CAAC,EAAE;IACpC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACT,GAAG,CAAC,EAAE;MACvBA,GAAG,GAAG,CAACA,GAAG,CAAC;IACb;IACA,MAAMU,GAAG,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,UAAU,EAAE;MACrCC,MAAM,EAAEL,OAAO,CAACK,MAAM;MACtBC,YAAY,EAAEV,iBAAiB,CAACA,iBAAiB,CAAC;QAChDW,GAAG,EAAEd,GAAG,CAACe,GAAG,CAACf,GAAG,IAAIA,GAAG,CAACgB,QAAQ,CAAC,CAAC,CAAC;QACnC,iBAAiB,EAAE,IAAI;QACvB,GAAGT;MACL,CAAC,CAAC;MACFU,OAAO,EAAEV,OAAO,CAACU;IACnB,CAAC,CAAC;IACF,WAAW,MAAMC,OAAO,IAAIR,GAAG,CAACS,MAAM,CAAC,CAAC,EAAE;MACxC,MAAMC,eAAe,CAACF,OAAO,CAAC;IAChC;EACF;EACA,OAAOZ,EAAE;AACX,CAAC,CAAC;AACF,SAASc,eAAeA,CAACF,OAAO,EAAE;EAChC,MAAMG,GAAG,GAAG;IAAErB,GAAG,EAAEA,GAAG,CAACsB,GAAG,CAACC,KAAK,CAACL,OAAO,CAACM,IAAI;EAAE,CAAC;EAChD,IAAIN,OAAO,CAACO,KAAK,EAAE;IACjBJ,GAAG,CAACK,KAAK,GAAG,IAAID,KAAK,CAACP,OAAO,CAACO,KAAK,CAAC;EACtC;EACA,OAAOJ,GAAG;AACZ;AAEAvB,OAAO,CAACM,QAAQ,GAAGA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}