{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\blockchain-bookstore\\\\frontend\\\\src\\\\components\\\\Purchases.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Grid, Card, CardContent, Button, Container } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Purchases = ({\n  contract,\n  accounts\n}) => {\n  _s();\n  const [purchasedBooks, setPurchasedBooks] = useState([]);\n  useEffect(() => {\n    if (contract && accounts) {\n      loadPurchases();\n    }\n    // eslint-disable-next-line\n  }, [contract, accounts]);\n  const loadPurchases = async () => {\n    const purchases = await contract.methods.getPurchases(accounts[0]).call();\n    const books = await Promise.all(purchases.map(id => contract.methods.books(id).call()));\n    setPurchasedBooks(books);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"My Purchases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: purchasedBooks.map(book => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: book.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              href: `https://ipfs.io/ipfs/${book.pdfHash}`,\n              target: \"_blank\",\n              children: \"Download PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Purchases, \"EtMjTK+BJt9NuDjZM5FAa10mjq4=\");\n_c = Purchases;\nexport default Purchases;\nvar _c;\n$RefreshReg$(_c, \"Purchases\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Grid","Card","CardContent","Button","Container","jsxDEV","_jsxDEV","Purchases","contract","accounts","_s","purchasedBooks","setPurchasedBooks","loadPurchases","purchases","methods","getPurchases","call","books","Promise","all","map","id","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","book","item","xs","sm","md","title","color","href","pdfHash","target","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/blockchain-bookstore/frontend/src/components/Purchases.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography, Grid, Card, CardContent, Button, Container } from '@material-ui/core';\r\n\r\nconst Purchases = ({ contract, accounts }) => {\r\n  const [purchasedBooks, setPurchasedBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (contract && accounts) {\r\n      loadPurchases();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [contract, accounts]);\r\n\r\n  const loadPurchases = async () => {\r\n    const purchases = await contract.methods.getPurchases(accounts[0]).call();\r\n    const books = await Promise.all(\r\n      purchases.map((id) => contract.methods.books(id).call())\r\n    );\r\n    setPurchasedBooks(books);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        My Purchases\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        {purchasedBooks.map((book) => (\r\n          <Grid item xs={12} sm={6} md={4} key={book.id}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h5\">{book.title}</Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  href={`https://ipfs.io/ipfs/${book.pdfHash}`}\r\n                  target=\"_blank\"\r\n                >\r\n                  Download PDF\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Purchases;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,IAAI,EAAEC,IAAI,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3F,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,IAAIC,QAAQ,EAAE;MACxBI,aAAa,CAAC,CAAC;IACjB;IACA;EACF,CAAC,EAAE,CAACL,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,OAAO,CAACC,YAAY,CAACP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC,CAAC;IACzE,MAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC7BN,SAAS,CAACO,GAAG,CAAEC,EAAE,IAAKd,QAAQ,CAACO,OAAO,CAACG,KAAK,CAACI,EAAE,CAAC,CAACL,IAAI,CAAC,CAAC,CACzD,CAAC;IACDL,iBAAiB,CAACM,KAAK,CAAC;EAC1B,CAAC;EAED,oBACEZ,OAAA,CAACF,SAAS;IAAAmB,QAAA,gBACRjB,OAAA,CAACP,UAAU;MAACyB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbvB,OAAA,CAACN,IAAI;MAAC8B,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAR,QAAA,EACxBZ,cAAc,CAACU,GAAG,CAAEW,IAAI,iBACvB1B,OAAA,CAACN,IAAI;QAACiC,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eAC9BjB,OAAA,CAACL,IAAI;UAAAsB,QAAA,eACHjB,OAAA,CAACJ,WAAW;YAAAqB,QAAA,gBACVjB,OAAA,CAACP,UAAU;cAACyB,OAAO,EAAC,IAAI;cAAAD,QAAA,EAAES,IAAI,CAACK;YAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eAClDvB,OAAA,CAACH,MAAM;cACLqB,OAAO,EAAC,WAAW;cACnBc,KAAK,EAAC,SAAS;cACfC,IAAI,EAAE,wBAAwBP,IAAI,CAACQ,OAAO,EAAG;cAC7CC,MAAM,EAAC,QAAQ;cAAAlB,QAAA,EAChB;YAED;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAb6BG,IAAI,CAACV,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcvC,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACnB,EAAA,CA5CIH,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}